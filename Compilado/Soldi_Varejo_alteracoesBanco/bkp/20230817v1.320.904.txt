
GO
/****** Object:  StoredProcedure [dbo].[sp_rel_balanceteFinanceiro]    Script Date: 25/04/2023 11:38:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER   procedure [dbo].[sp_rel_balanceteFinanceiro](
      @filial     varchar(20),
      @datade     varchar(10),
      @dataate    varchar(10),
      @tipo       varchar(50),
      @status     varchar(10),
      @visualizar varchar(50),
      @Modalidade varchar(8),
  	@centrocusto varchar(10)

)As
-- sp_rel_balancetefinanceiro 'matriz', '20200801', '20200901', 'emissao', 'previsto', 'CONSOLIDADO MES', 'todos'

Declare @String as varchar(8000)
Declare @Where as varchar(1024)
Declare @codStatus as varchar(50)
DECLARE @String2 as varchar(8000)
DECLARE @String3 as varchar(8000) 
Declare @Tabela as varchar(15)

Begin

      if (@status ='ABERTO')
            begin
            set @codStatus= ' = 1'
            end
      else 
            begin
                  if (@status ='CONCLUIDO')
                        begin
                              set @codStatus= ' = 2'
                        end
                  else 
                        begin
                              if (@status ='CANCELADO')
                                   begin
                                         set @codStatus= ' = 3'
                                   end
                              else 
                                   begin
                                         set @codStatus= ' <> 3'
                                   end
                        end
            end
            if (@tipo ='')
            begin
                  set @tipo= 'emissao'
            end

IF @Modalidade = 'DESPESAS'
      Set @Tabela = 'Conta_a_Pagar'


IF @Modalidade = 'RECEITAS'
      Set @Tabela = 'Conta_a_Receber'

IF @Modalidade = 'TODOS'                 
      Set @Tabela = 'W_br_contas'


IF @visualizar = 'ANALITICO'
      Goto CentroCusto
Else IF @visualizar = 'SINTETICO'
      Goto Grupo        
Else if @visualizar='CONSOLIDADO MES'
	  Goto Consolidado

CentroCusto:      
      --Monta Clausula Where da Procura
      set @where = 'Where W_br_contas.Filial = '+ char(39) + @filial + char(39) + '   and status '+@codStatus+' and '
      set @where = @where + @tipo + ' between ' + char(39) + @datade + char(39) + ' and ' + char(39) + @dataate + char(39)
	  if @centrocusto <> '' 
		SET @where = @where + ' and codigo_centro_custo LIKE ' + char(39) + @centrocusto + '%' + CHAR(39)
      
      IF @Modalidade <> 'TODOS'
                  Set @where = @where +' and modalidade = ' + char(39) + @Modalidade + char(39) + ' '
      --Monta Select
      set @string = 'Select Codigo,Descricao,replace(isnull(debito,'+ char(39) +'0,00'+ char(39) +'),'+ char(39) +'.'+ char(39) +','+ char(39) +','+ char(39) +') as Debito,Replace(isnull(credito,'+ char(39) +'0,00'+ char(39) +'),'+ char(39) +'.'+ char(39) +','+ char(39) +','+ char(39) +') as Credito from ( '+
                        /*'Select modalidade, CASE WHEN CODIGO_GRUPO >9  THEN ' + char(39) +'0' + char(39) +'+codigo_grupo ELSE ' + char(39) +'00' + char(39) +'+codigo_grupo end as ordem, CASE WHEN CODIGO_GRUPO >9  THEN ' + char(39) +'0' + char(39) +'+codigo_grupo ELSE ' + char(39) +'00' + char(39) +'+codigo_grupo end as codigo, descricao_Grupo as descricao , ' + char(39) +' ' + char(39) +' as Debito , ' + char(39) +' ' + char(39) +' as Credito, '+char(39)+' '+char(39)+'as saldo from  W_br_contas '+@where+' group by modalidade, codigo_grupo,descricao_Grupo '+
                        'union '+
                        'select modalidade,codigo_subgrupo as ordem, codigo_subgrupo as codigo, descricao_subgrupo as descricao ,' + char(39) +' ' + char(39) +' as Debito , ' + char(39) +' ' + char(39) +' as Credito, '+char(39)+' '+char(39)+'as saldo  from  W_br_contas '+@where+' group by modalidade,codigo_grupo,codigo_subgrupo,descricao_subgrupo '+
                        'union '+
                        */
                        'Select  modalidade,codigo_centro_custo as ordem, codigo_centro_custo as codigo ,descricao_centro_custo as descricao, '+
                        '     Debito = convert(varchar, sum(case when modalidade=' + char(39) +'DESPESAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10) , '+
                        '     Credito = convert(varchar,sum(case when modalidade=' + char(39) +'RECEITAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10), '+
                        '           Saldo = '+char(39) +char(39) +
                        'from  W_br_contas '+@where+' '+
                        'group by modalidade,codigo_grupo ,codigo_centro_custo,descricao_centro_custo '+
                        'union '+
                        
                        'Select modalidade, CASE WHEN CODIGO_GRUPO >9  THEN ' + char(39) +'0' + char(39) +'+codigo_grupo ELSE ' + char(39) +'00' + char(39) +'+codigo_grupo end+'+CHAR(39)+' '+CHAR(39)+' as ordem,'+CHAR(39)+CHAR(39)+' as codigo , '+CHAR(39)+CHAR(39)+', '+
                        '     Debito = '+CHAR(39)+CHAR(39)+','+
                        '     Credito = '+CHAR(39)+CHAR(39)+', '+
                        '    Saldo = '+CHAR(39)+CHAR(39)+' '+
                        '     from  W_br_contas '+@where+' '+
                        'group by modalidade,codigo_grupo,descricao_Grupo '+
                        'union '+
                        
                        'Select modalidade, CASE WHEN CODIGO_GRUPO >9  THEN ' + char(39) +'0' + char(39) +'+codigo_grupo ELSE ' + char(39) +'00' + char(39) +'+codigo_grupo end as ordem, ' + char(39) +'|-' + char(39) +'+CASE WHEN CODIGO_GRUPO >9  THEN ' + char(39) +'0' + char(39) +'+codigo_grupo ELSE ' + char(39) +'00' + char(39) +'+codigo_grupo end +' + char(39) +'-|' + char(39) +' as codigo , ' + char(39) +'|-' + char(39) +'+ descricao_Grupo +' + char(39) +'-|' + char(39) +', '+
                        '     Debito = ' + char(39) +'|-' + char(39) +'+ convert(varchar, sum(case when modalidade=' + char(39) +'DESPESAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10)+' + char(39) +'-|' + char(39) +' , '+
                        '     Credito = ' + char(39) +'|-' + char(39) +'+  convert(varchar,sum(case when modalidade=' + char(39) +'RECEITAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10)+' + char(39) +'-|' + char(39) +', '+
                        '           Saldo = ' + char(39) +'|-' + char(39) +'+  convert(varchar,sum(case when modalidade=' + char(39) +'RECEITAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end)- '+
                        '           sum(case when modalidade=' + char(39) +'DESPESAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0))else valor_pago end else 0 end),10)+' + char(39) +'-|' + char(39) +' '+
                        '     from  W_br_contas '+@where+' '+
                        'group by modalidade,codigo_grupo,descricao_Grupo '+
                        'union '+
                        'Select modalidade, rtrim(codigo_subgrupo) as ordem,codigo_subgrupo as codigo, descricao_subgrupo,  '+
                        '     Debito =  convert(varchar, sum(case when modalidade=' + char(39) +'DESPESAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10) , '+
                        '     Credito =  convert(varchar,sum(case when modalidade=' + char(39) +'RECEITAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10) ,  '+
                        '           Saldo = '+char(39) +char(39) +
                        '     from  W_br_contas '+@where+' '+
                        'group by modalidade, codigo_subgrupo,descricao_subgrupo '
                        
                  set @String2=     'union '+
                        'Select modalidade ='+char(39) +char(39) +',  '+char(39) +'999' + char(39) +' as ordem,' + char(39) +'|-TOTAL-| ' + char(39) +' as codigo, ' + char(39) + char(39) +',  '+
                        '     Debito = ' + char(39) +'|-' + char(39) +'+ convert(varchar, sum(case when modalidade=' + char(39) +'DESPESAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10)+' + char(39) +'-|' + char(39) +' , '+
                        '     Credito = ' + char(39) +'|-' + char(39) +'+ convert(varchar,sum(case when modalidade=' + char(39) +'RECEITAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end),10)+' + char(39) +'-|' + char(39) +' ,  '+
                        '           Saldo = ' + char(39) +'|-' + char(39) +'+convert(varchar,sum(case when modalidade=' + char(39) +'RECEITAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0)) else valor_pago end else 0 end)- '+
                        '           sum(case when modalidade=' + char(39) +'DESPESAS' + char(39) +' then case when status=1 then ((isnull(valor,0)-isnull(desconto,0))+isnull(acrescimo,0))else valor_pago end else 0 end),10) +' + char(39) +'-|' + char(39) +''+
                        '     from  W_br_contas '+@where+' '+
                        ''+
                  
                        
            ') as a '+
                  'order by modalidade desc,ordem'
Goto Fim                
      
Grupo:
		Set @string = 'SELECT Codigo = case when Len(Convert(Varchar,E.codigo_grupo)) = 1 Then ' + char(39) + '00' + char(39) + ' + Convert(Varchar,E.codigo_grupo) when  Len(Convert(Varchar,E.codigo_grupo)) = 2 Then ' + char(39) + '0' + char(39) + ' + Convert(Varchar,E.codigo_grupo) Else Convert(Varchar,E.codigo_grupo) End, '
		Set @string = @string +' Modalidade = c.Modalidade, '
		Set @string = @string +' Descricao = E.Descricao_grupo , '
		Set @string = @string +' Valor = case when a.status = 1 then Sum(Isnull(Valor,0)-ISNULL(Desconto,0)+Isnull(Acrescimo,0)) when a.status = 2 then Sum(Valor_Pago) Else 0 end into #Balancete'
		Set @string = @string +' FROM ' + @Tabela + ' a INNER JOIN '
		Set @string = @string +' centro_custo c ON (a.codigo_centro_custo = c.codigo_centro_custo AND a.filial = c.filial) INNER JOIN '
		Set @string = @string +' subgrupo_cc d ON (c.codigo_subgrupo = d .codigo_subgrupo AND c.filial = d .filial) INNER JOIN '
		Set @string = @string +' grupo_cc e ON (d .codigo_grupo = e.codigo_grupo AND d .filial = e.filial '
    
		IF @Modalidade <> 'TODOS'
			Set @string = @string +' and c.modalidade = ' + char(39) + @Modalidade + char(39) + ' '

		set @String2 = ' ) Where a.Filial = '+ char(39) + @filial + char(39) + ' and a.status '+@codStatus+' and '
		set @String2 = @String2 + @tipo + ' between ' + char(39) + @datade + char(39) + ' and ' + char(39) + @dataate + char(39)
		  if @centrocusto <> '' 
			SET @where = @where + ' and codigo_centro_custo LIKE ' + char(39) + @centrocusto + '%' + CHAR(39)

		set @String2 = @String2 + ' GROUP BY E.codigo_grupo , E.Descricao_grupo,c.Modalidade, a.status order by codigo ' 
		set @String2 = @String2 + ' Select Distinct Codigo, Modalidade, Descricao, Valor = replace(convert(varchar(20),Sum(Valor * CASE WHEN MODALIDADE = ' + CHAR(39) + 'DESPESAS' + CHAR(39) + ' THEN -1 ELSE 1 END)),' + char(39) + '.' + char(39) + ',' + char(39) + ',' + char(39) + ') from #Balancete Group by Codigo, Modalidade, Descricao '
		set @String2 = @String2 + ' UNION all Select '+ char(39) + '|-TOTAL-|' + char(39) + ','+ char(39) + '' + char(39) + ',' + char(39) + '' + char(39) + ','+ char(39)+'|-'+ char(39)+' + replace(convert(varchar(20),Sum(isnull(Valor,0) * CASE WHEN MODALIDADE = ' + CHAR(39) + 'DESPESAS' + CHAR(39) + ' THEN -1 ELSE 1 END)),' + char(39) + '.' + char(39) + ',' + char(39) + ',' + char(39) + ') +'+ char(39)+'-|'+ char(39)+' from #Balancete '
		/*
		set @String2 = @String2 + ' UNION Select '+ char(39) + 'TOTAL' + char(39) + ','+ char(39) + '' + char(39) + ',Sum(Isnull(Valor,0)-Isnull(Desconto,0)+Isnull(Acrescimo,0)),SUM(Valor_Pago) '
		Set @String2 = @String2 +' FROM ' + @Tabela + ' a INNER JOIN '
		Set @String2 = @String2 +' centro_custo c ON (a.codigo_centro_custo = c.codigo_centro_custo AND a.filial = c.filial) INNER JOIN '
		Set @String2 = @String2 +' subgrupo_cc d ON (c.codigo_subgrupo = d .codigo_subgrupo AND c.filial = d .filial) INNER JOIN '
		Set @String2 = @String2 +' grupo_cc e ON (d .codigo_grupo = e.codigo_grupo AND d .filial = e.filial '
    
		IF @Operacao <> 'TODOS'
			Set @String2 = @String2 +' and C.modalidade = ' + char(39) + @operacao + char(39) + ' '

		Set @String2 = @String2 +' ) Where a.Filial = '+ char(39) + @filial + char(39) + ' and a.status '+@codStatus+' and '
		set @String2 = @String2 + @tipo + ' between ' + char(39) + @datade + char(39) + ' and ' + char(39) + @dataate + char(39)    
		*/
		set @String2 = @String2 + '  '
Goto Fim          

Consolidado:
	
	set @datade = CONVERT(VARCHAR,CONVERT(DATE,convert(varchar,DATEPART(YYYY, @datade ))+'-'+Convert(varchar,DATEPART(m, @datade ))+'-01'),112)
	set @dataate= CONVERT(VARCHAR,DATEADD(D,-1, DATEADD(M,1, convert(varchar,DATEPART(YYYY, @dataate ))+'-'+Convert(varchar,DATEPART(m, @dataate ))+'-01')),112)


	
	Set @string = 'Select ordem = DATEPART(m, '+@tipo+') , ' + char(39)+ 'SFT_' + char(39) +' +convert(varchar,DATEPART(m, '+@tipo+'))+' + char(39) +'/' + char(39) +'+convert(varchar,DATEPART(YY, '+@tipo+'))  AS MES ,'
	Set @string = @string +'		NOME = CASE'
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 1 THEN ' + char(39) +'JANEIRO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 2 THEN ' + char(39) +'FEVEREIRO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 3 THEN ' + char(39) +'MARÇO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 4 THEN ' + char(39) +'ABRIL' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 5 THEN ' + char(39) +'MAIO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 6 THEN ' + char(39) +'JUNHO' + char(39)
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 7 THEN ' + char(39) +'JULHO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 8 THEN ' + char(39) +'AGOSTO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 9 THEN ' + char(39) +'SETEMBRO' + char(39)
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 10 THEN ' + char(39) +'OUTUBRO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 11 THEN ' + char(39) +'NOVEMBRO' + char(39) 
	Set @string = @string +'				WHEN DATEPART(M, '+@tipo+') = 12 THEN ' + char(39) +'DEZEMBRO' + char(39) 
	Set @string = @string +'		END, '
	Set @string = @string +'		Debito = case when a.modalidade = ' + char(39) +'DESPESAS' + char(39) +' THEN case when a.status = 1 then Isnull(Valor,0)-ISNULL(Desconto,0)+Isnull(Acrescimo,0) when a.status = 2 then Valor_Pago Else 0 end ELSE 0 END,'
	Set @string = @string +'		Credito = case when a.modalidade = ' + char(39) +'RECEITAS' + char(39) +' THEN case when a.status = 1 then Isnull(Valor,0)-ISNULL(Desconto,0)+Isnull(Acrescimo,0) when a.status = 2 then Valor_Pago Else 0 end ELSE 0 END '
	Set @string = @string +'INTO #TOTAL from W_br_contas AS a '
	Set @string = @string +'WHERE  a.Filial = '+ char(39) + @filial + char(39) + '  and a.status '+@codStatus+' and  ' + @tipo + ' between ' + char(39) + @datade + char(39) + ' and ' + char(39) + @dataate + char(39)+';' 
	if @centrocusto <> '' 
		SET @string = @string + ' and a.codigo_centro_custo LIKE ' + char(39) + @centrocusto + '%' + CHAR(39)


	Set @string = @string +' SELECT MES, NOME, Debito= replace(debito,'+ char(39)+'.'+ char(39)+','+ char(39)+','+ char(39)+'), Credito= replace( Credito,'+ char(39)+'.'+ char(39)+','+ char(39)+','+ char(39)+') from (  '
	Set @string = @string +' Select ordem ,MES, NOME, Debito= Convert(varchar,SUM(debito)), Credito= convert(varchar,sum(Credito)) from #TOTAL '
	Set @string = @string +' group by mes, nome, ordem';
	
	set @String2 = ' UNION all Select 20, '+ char(39) + '|-TOTAL-|' + char(39) + ','
			+ char(39)  + char(39) + ','
			+ char(39)+'|-'+ char(39)+' + convert(varchar,SUM(Debito)) +'+ char(39)+'-|'+ char(39)+','
			+ char(39)+'|-'+ char(39)+' + convert(varchar,SUM(Credito)) +'+ char(39)+'-|'+ char(39)
		+' from #TOTAL
		) as a 
		order by ordem ;'
	

Fim:
      Exec(@string+@String2)
End


 

GO

ALTER TABLE CFOP ADD CD_ICMS TINYINT DEFAULT 0, CD_PISCOFINS TINYINT DEFAULT 0
UPDATE CFOP SET CD_PISCOFINS = CASE WHEN CFOP IN(1101,
1102, 1111,1113,1116,1117,1118,1120,1121,1122,1124,1125,1126,1128,1132,1135,1159,
1201,1202,1203,1204,1206,1207,1215,1216,1251,1401,1403,1407,1410,1411,1456,1556,
1651,1652,1653,1660,1661,1662,1922,1933,2101,2102,2111,2113,2116,2117,2118,2120,
2121,2122,2124,2125,2126,2128,2132,2135,2159,2201,2202,2206,2207,2215,2216,
2251,2401,2403,2407,2410,2411,2456,2556,2651,2652,2653,2660,2661,2662,2922,2933,
3101,3102 ,3126,3128,3251,3556,3651,3652,3653) THEN 1 ELSE 0 END
WHERE CFOP.TIPO = 2


GO
IF (SELECT COUNT(*) FROM PARAMETROS WHERE PARAMETROS.PARAMETRO =  'NATUREZA_DEVOLUCAO_CLIENTE_PDV') <= 0
BEGIN
	INSERT INTO PARAMETROS SELECT 
	'NATUREZA_DEV_CLI_PDV', GETDATE(), '1998', GETDATE(), '1998', 'CODIGO DA NATUREZA DE OPERACAO PARA DEVOLUCAO DE COMPRA DE CLIENTES', 'C', '', 1, '', 0, 0, GETDATE(), 0
END


GO
IF (SELECT COUNT(*) FROM SEQUENCIAIS WHERE SEQUENCIAIS.TABELA_COLUNA = 'DEVOLUCAO_NFE.CODIGO') <= 0
BEGIN
	INSERT INTO SEQUENCIAIS SELECT 
	'DEVOLUCAO_NFE.CODIGO', 'NUMERO SEQUENCIAL PARA DEVOLUCAO DE CLIENTES', '0', '8', '', '', '', '', '', '', '', '', NULL, 0
END

GO
/****** Object:  StoredProcedure [dbo].[sp_Rel_NotasFiscais]    Script Date: 05/11/2023 16:20:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--PROCEDURES =======================================================================================
ALTER    procedure [dbo].[sp_Rel_NotasFiscais]

     

      @Filial           varchar(20),                -- Loja
      @DataDe           varchar(8),                 -- Data Inicial
      @DataAte          varchar(8),                 -- Data Fim
      @Tipo             varchar(20),                -- Tipo = 1 - Saidas, Tipo = 2 - Entrada
	  @Nota             varchar(20),                -- Nmero Nota Fiscal
	  @Fornecedor       varchar(20),                -- Nome Fornecedor
      @NF_CANC          varchar(20),		    -- Normal = NAO, Cancelada = SIM
      @plu			   varchar(20),
      @ean			   varchar(20),
      @ref             varchar(20),
      @descricao		varchar(40),
      @NF_Devolucao    varchar(20),
      @Excluir_Natureza varchar(20),
      @Incluir_Natureza varchar(20),
	  @notaProdutor    varchar(30),
	  @tipoRelatorio  varchar(40)

As
begin
--exec     sp_Rel_NotasFiscais    @Filial='MATRIZ', @datade = '20180701',  @dataate = '20180815',  @plu = '',  @ean = '',  @Ref = '',  @descricao = '',  @tipo = 'TODOS',  @Nota = '',  @fornecedor = '',  @NF_CANC = 'NAO',  @NF_Devolucao = 'NAO',  @Excluir_Natureza = '',  @Incluir_Natureza = '',  @notaProdutor = 'TODOS',  @tipoRelatorio = 'Analitico' 

if(@tipoRelatorio = 'Analitico')
begin
    DECLARE @NF varchar(5000)
      
    IF LTRIM(RTRIM(@Nota)) <> ''
		begin
            SET @NF = 'Select isnull((
										Case When ISNULL(NF.Dest_Fornec,0) = 0 Then (
											Select Distinct Ltrim(Rtrim(Nome_Cliente)) 
											From Cliente c 
											where c.Codigo_Cliente = NF.Cliente_Fornecedor
											) 
										Else  
											NF.Cliente_Fornecedor 
										End
									  ),nf.cliente_fornecedor) Cliente_Fornecedor'
			SET @NF = @nf +',Plu = '+CHAR(39)+'PLU'+CHAR(39)+'+PLU'
			SET @NF = @nf +',Ref=CODIGO_REFERENCIA'
			SET @NF = @nf +',nf_item.Descricao'
			SET @NF = @nf +',nf_item.Qtde'
			SET @NF = @nf +',nf_item.Embalagem'
			SET @NF = @nf +',nf_item.Unitario'
			SET @NF = @nf +',nf_item.Total '
            SET @NF = @nf +' from NF_Item INNER JOIN NF '
			SET @NF = @nf +'     ON NF.CODIGO=NF_ITEM.CODIGO '
			SET @NF = @nf +'    and nf.Tipo_NF = nf_item.Tipo_NF '
			SET @NF = @nf +'    and nf.Cliente_Fornecedor= nf_item.Cliente_Fornecedor '
			SET @NF = @nf +'INNER JOIN NATUREZA_OPERACAO NP ON NF.CODIGO_OPERACAO = NP.CODIGO_OPERACAO '
			SET @NF = @nf+'	where nf.codigo = '+@nota
			
			IF LTRIM(RTRIM(@Tipo)) = '1-Saida'
				SET @NF = @NF + 'AND NF.Tipo_NF = 1 '
			IF LTRIM(RTRIM(@Tipo)) = '2-Entrada'
				SET @NF = @NF + 'AND NF.Tipo_NF = 2 '
			IF LTRIM(RTRIM(@Fornecedor)) <> ''
                SET @NF = @NF + 'AND LTRIM(NF.Cliente_Fornecedor) = ' + CHAR(39) + @Fornecedor + CHAR(39) + ' '
			
			IF LTRIM(RTRIM(@descricao)) <> ''
				SET @NF = @NF + 'AND LTRIM(NF_Item.DESCRICAO) like ' + CHAR(39) + @descricao + CHAR(39) + ' '
			
		end
	else
		begin
			SET @NF = 'SELECT NF.Filial'
			SET @NF = @NF + ',Tipo= case when nf.tipo_nf=1 then '+CHAR(39)+'SAIDA'+CHAR(39)+' else '+CHAR(39)+'ENTRADA'+CHAR(39)+' END'
			SET @NF = @NF + ',Emissao= Convert(Varchar,NF.Emissao,103) '
			SET @NF = @NF + ',[NF Produtor]= '+CHAR(39)+'SFT_'+CHAR(39)+'+ISNULL(nf.CodigoNotaProdutor,'+CHAR(39)+CHAR(39)+') '
			SET @NF = @NF + ',Nota= '+CHAR(39)+'SFT_'+CHAR(39)+'+NF.Codigo '
			SET @NF = @NF + ',[Chave NFE] = NF.ID '
			SET @NF = @NF + ',Destinatario = isnull((
												Case When ISNULL(NF.Dest_Fornec,0) = 0  Then (
													Select Distinct Ltrim(Rtrim(Nome_Cliente)) 
														From Cliente c where c.Codigo_Cliente = NF.Cliente_Fornecedor
													) 
													Else  
													NF.Cliente_Fornecedor 
												End
											),nf.cliente_fornecedor
										) '
			SET @NF = @NF + ',CNPJ = isnull((
												Case When ISNULL(NF.Dest_Fornec,0) = 0  Then (
													Select Distinct Ltrim(Rtrim(CNPJ)) 
														From Cliente c where c.Codigo_Cliente = NF.Cliente_Fornecedor
													) 
													Else  (
													Select Distinct Ltrim(Rtrim(CNPJ)) 
														From FORNECEDOR  where FORNECEDOR = NF.Cliente_Fornecedor
														)
												End
											),nf.cliente_fornecedor
										) '
			SET @NF = @NF + ',Entrada= Convert(Varchar,NF.Data,103) '
			SET @NF = @NF + ',[Vlr Prod]= Convert(decimal(15,2),Sum(NF_Item.Total+Isnull(NF.Frete,0))) '
			SET @NF = @NF + ',[Vlr Nota]= NF.Total'

			SET @NF = @NF + ' From NF_Item Inner Join NF ON NF.Codigo = NF_Item.Codigo '
			SET @NF = @NF + '							  AND NF.Cliente_Fornecedor = NF_Item.Cliente_Fornecedor  '
			SET @NF = @NF + '							  AND NF.Filial = NF_Item.Filial '
			SET @NF = @NF + '              INNER JOIN NATUREZA_OPERACAO NP ON NF.CODIGO_OPERACAO = NP.CODIGO_OPERACAO '

			SET @NF = @NF + 'WHERE NF.Data BETWEEN ' + CHAR(39) +  convert(varchar,@DataDe,112) + CHAR(39) + ' AND '

			SET @NF = @NF + CHAR(39) + convert(varchar,@DataAte,112)  + char(39) + ' '
      
      
			IF LTRIM(RTRIM(@NF_CANC)) = 'SIM'

				SET @NF = @NF + 'AND Isnull(NF.NF_Canc,0) = 1 '
            

			IF LTRIM(RTRIM(@NF_CANC)) = 'NAO'

				SET @NF = @NF + 'AND Isnull(NF.NF_Canc,0) = 0 '
      
			IF LTRIM(RTRIM(@Filial)) <> ''
				SET @NF = @NF + 'AND LTRIM(NF.Filial) = ' + CHAR(39) + @Filial + CHAR(39) + ' '

			IF LTRIM(RTRIM(@Fornecedor)) <> ''

				SET @NF = @NF + 'AND LTRIM(NF.Cliente_Fornecedor) = ' + CHAR(39) + @Fornecedor + CHAR(39) + ' '

 
			IF LTRIM(RTRIM(@Tipo)) = '1-Saida'

				SET @NF = @NF + 'AND NF.Tipo_NF = 1 '

     

			IF LTRIM(RTRIM(@Tipo)) = '2-Entrada'

				SET @NF = @NF + 'AND NF.Tipo_NF = 2 '

 
			if(LEN(@plu)>0)
			begin
				SET @NF = @NF + ' and nf_item.plu='+CHAR(39)+@plu+CHAR(39)	
			end
			IF LTRIM(RTRIM(@descricao)) <> ''
			begin
				SET @NF = @NF + 'AND LTRIM(NF_Item.DESCRICAO) like ' + CHAR(39) + @descricao + CHAR(39) + ' '	
			end
			if(@NF_Devolucao='SIM')
			begin
				SET @NF = @NF + ' and NP.NF_devolucao = 1 '
			end

			if(@NF_Devolucao='NAO')
			begin
				SET @NF = @NF + ' and NP.NF_devolucao = 0 '
			end
		
			if(LEN(@Excluir_Natureza)>0)
			begin
				SET @NF = @NF + ' and NP.CODIGO_OPERACAO NOT IN('+@Excluir_Natureza+') '
			end
		
			if(LEN(@Incluir_Natureza)>0)
			begin
				SET @NF = @NF + ' and NP.CODIGO_OPERACAO IN('+@Incluir_Natureza+') '
			end
		
			if(@notaProdutor <> 'TODOS')
			BEGIN 
				IF(@notaProdutor ='SIM')
				BEGIN 
					SET @NF = @NF + ' and ISNULL(CodigoNotaProdutor,'+CHAR(39)+CHAR(39)+') <> '+CHAR(39)+CHAR(39)
				END 
				ELSE 
				BEGIN
					SET @NF = @NF + ' and ISNULL(CodigoNotaProdutor,'+CHAR(39)+CHAR(39)+') = '+CHAR(39)+CHAR(39)
				END
			END 

			  SET @NF = @NF + ' Group by NF.Filial, NF.Codigo, NF.Cliente_Fornecedor, NF.Emissao, NF.data, NF.Tipo_NF, NF.Total,ISNULL(nf.CodigoNotaProdutor,'+CHAR(39)+CHAR(39)+'),NF.ID,NF.Dest_Fornec '

			  SET @NF = @NF + ' Order By NF.Filial, Convert(Varchar,NF.Data,103), NF.Codigo '
			end
     
	
  execute(@NF)
  print @nf
end 
else
begin 
	Select PLU= 'PLU'+ni.PLU
		  ,ni.Descricao
		  ,Qtde =sum(ni.qtde)
		  ,Total= sum(ni.total_faturado)  
	from nf_item as ni  
		 inner join nf on nf.filial  = ni.filial 
					  and nf.Codigo  = ni.Codigo
					  and nf.Tipo_NF = ni.Tipo_NF
					  and nf.Cliente_Fornecedor = ni.Cliente_Fornecedor
		 inner join Natureza_operacao as nop on nf.Codigo_operacao = nop.Codigo_operacao 
	where  (NF.Data BETWEEN @DataDe AND @DataAte)
		 AND Not Exists(Select * From nf_inutilizadas i Where Convert(varchar,i.N_Inicio) >= NF.Codigo And Convert(varchar,i.N_Fim) <= NF.Codigo)
		 and ltrim(nf.filial) = @Filial
		 AND (
				 (@NF_CANC ='TODOS')
			  OR (@NF_CANC ='SIM' AND Isnull(NF.NF_Canc,0) = 1) 
			  OR (@NF_CANC ='NAO' AND Isnull(NF.NF_Canc,0) = 0)
		     )
		 AND (LTRIM(RTRIM(@Fornecedor)) = '' OR  RTRIM(LTRIM(NF.Cliente_Fornecedor)) =@Fornecedor)
		 AND  (
				   (@Tipo= 'TODOS')
				OR (@Tipo= '1-Saida' and nf.Tipo_NF=1)
				OR (@Tipo= '2-Entrada' and nf.Tipo_NF=2)
			  )
		 AND (LEN(@plu)=0 OR ni.PLU = @PLU)
		 AND (
				  (@NF_Devolucao='TODOS' )
				OR(@NF_Devolucao='SIM' and nop.NF_devolucao =1)
				OR(@NF_Devolucao='NAO' and nop.NF_devolucao =0)
			)
		 AND (LEN(@Excluir_Natureza)=0 OR @Excluir_Natureza like '%'+ convert(varchar,nop.CODIGO_OPERACAO) +'%' )
		 AND (LEN(@Incluir_Natureza)=0 OR @Incluir_Natureza like '%'+ convert(varchar,nop.CODIGO_OPERACAO) +'%' )
		 AND (
				(@notaProdutor = 'TODOS')
			  OR(@notaProdutor='SIM' AND ISNULL(NF.CodigoNotaProdutor,0) <> '')
			  OR(@notaProdutor='NAO' AND ISNULL(NF.CodigoNotaProdutor,0) = '')
			  )
		and (len(@descricao)=0 or ni.Descricao like @descricao)
	group by ni.plu,ni.Descricao
	order by LTRIM(RTRIM( ni.Descricao))
end 

end

GO
CREATE PROCEDURE dbo.sp_br_Cons_NFe_DadosFiscais
	@Filial VARCHAR(20),
	@Cliente_Fornecedor VARCHAR(50),
	@Codigo VARCHAR(20),
	@Serie INT
AS
	SELECT 
	NF_ITEM.Num_Item as Seq, 
	nf_item.ncm, 
	NF_ITEM.PLU, 
	CONVERT(VARCHAR, ISNULL(mercadoria.origem, '0')) + CONVERT(VARCHAR, ISNULL(cst_icms, '0')) as CST_ICMS,  
	nf_item.codigo_operacao AS CFOP, 
	aliquota_icms as Aliq_ICMS, 
	nf_item.total AS Total_Item, 
	base_icms AS BC_ICMS,  
	NF_ITEM.redutor_base AS Redutor_Base,  
	icmsv AS VL_ICMS, base_iva AS BCICMSST,  
	iva AS VLICMSST, 
	NF_ITEM.IPI , 
	IPIV AS VL_IPI,  
	CASE WHEN NF_ITEM.CSTPIS < '50' THEN (select top 1 DP.CST_ENTRADA FROM PISCofins_CST_DePara DP WHERE DP.CST_Saida = NF_ITEM.cstpis)  ELSE NF_ITEM.cstpis END  AS CST_PISCOFINS, 
	NF_ITEM.base_pis AS BC_PISCOFINS,  
	NF_ITEM.aliquota_pis AS ALIQ_PIS, 
	NF_ITEM.PISV AS VL_PIS,  
	NF_ITEM.aliquota_cofins AS ALIQ_COFINS, 
	NF_ITEM.CofinsV AS VL_COFINS  
	FROM NF_Item 
	INNER JOIN nf on nf.Filial = nf_item.Filial  and NF.Cliente_Fornecedor = Nf_item.Cliente_Fornecedor  AND nf.Codigo = NF_Item.codigo  AND nf.Tipo_NF = nf_item.Tipo_NF
	INNER JOIN  mercadoria on nf_item.plu = mercadoria.plu  
	WHERE  nf.Filial = @FILIAL 
	AND nf.Cliente_Fornecedor = @Cliente_Fornecedor 
	AND nf.codigo = @Codigo 
	AND NF.Serie = @Serie 
	AND nf.Tipo_NF = 2  
	ORDER BY 1


--Script ABAIXO REQUER ATENCAO
GO
Alter Table Saida_estoque Add IcmsItemVlr Decimal(12,2)

update Saida_estoque set icmsItemVlr = 
CONVERt(DECIMAL(12,2), 
(vlr - ISNULL(desconto, 0) + ISNULL(acrescimo, 0)) * case when ISNULL(Aliquota_ICMS, 0) = 0 THEN 0 ELSE Aliquota_ICMS / 100 END)
WHERE DATA_MOVIMENTO >= DATEADD(DAY, -45, GETDATE())




/****** Object:  Table [dbo].[NF_Recebimento]    Script Date: 03/07/2023 15:33:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[NF_Recebimento](
	[Filial] [varchar](20) NOT NULL,
	[Cliente_Fornecedor] [varchar](50) NOT NULL,
	[ID] [varchar](44) NOT NULL,
	[Codigo] [varchar](20) NOT NULL,
	[Emissao] [datetime] NOT NULL,
	[Total] [decimal](12, 2) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

/****** Object:  Table [dbo].[NF_Recebimento_Itens]    Script Date: 03/07/2023 15:34:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[NF_Recebimento_Itens](
	[Filial] [varchar](20) NOT NULL,
	[Cliente_Fornecedor] [varchar](50) NOT NULL,
	[ID] [varchar](44) NOT NULL,
	[Codigo] [varchar](20) NOT NULL,
	[PLU] [varchar](17) NOT NULL,
	[Lote] [varchar](40) NULL,
	[Validade] [datetime] NULL,
	[Qtde_Recebida] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC,
	[PLU] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


ALTER TABLE Mercadoria ADD Codigo_Emissao_NFe VARCHAR(20) DEFAULT ''

GO

ALTER TABLE NF_Item ADD Codigo_Emissao_NFe VARCHAR(20) DEFAULT ''

go

/****** Object:  StoredProcedure [dbo].[sp_NF_DANFE]    Script Date: 10/07/2023 07:50:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER  PROCEDURE [dbo].[sp_NF_DANFE]
	@FILIAL				VARCHAR(20),
	@CLIENTE_FORNECEDOR VARCHAR(20),
	@NUMERO				VARCHAR(20),
	@TIPONF				VARCHAR(1),
	@TIPOORIGEM			VARCHAR(1)
AS



	IF object_id('tempdb..#DUPLICATAS') IS NOT NULL 
		BEGIN
			 DROP TABLE #DUPLICATAS
		END
	CREATE TABLE #DUPLICATAS (
						FILIAL	VARCHAR(20) DEFAULT '',
						CLIENTE_FORNECEDOR VARCHAR(30) DEFAULT '',
						NUMERO VARCHAR(20) DEFAULT '',
						PARCELA01 VARCHAR(100) DEFAULT '',
						PARCELA02 VARCHAR(100) DEFAULT '',
						PARCELA03 VARCHAR(100) DEFAULT '',
						PARCELA04 VARCHAR(100) DEFAULT '',
						PARCELA05 VARCHAR(100) DEFAULT '',
						PARCELA06 VARCHAR(100) DEFAULT '',
						PARCELA07 VARCHAR(100) DEFAULT '',
						PARCELA08 VARCHAR(100) DEFAULT '',
						PARCELA09 VARCHAR(100) DEFAULT '',
						PARCELA10 VARCHAR(100) DEFAULT '',
						PARCELA11 VARCHAR(100) DEFAULT '',
						PARCELA12 VARCHAR(100) DEFAULT '',
						PARCELA13 VARCHAR(100) DEFAULT '',
						PARCELA14 VARCHAR(100) DEFAULT '',
						PARCELA15 VARCHAR(100) DEFAULT '',
						PARCELA16 VARCHAR(100) DEFAULT '',
						PARCELA17 VARCHAR(100) DEFAULT '',
						PARCELA18 VARCHAR(100) DEFAULT '',
						PARCELA19 VARCHAR(100) DEFAULT '',
						PARCELA20 VARCHAR(100) DEFAULT '',
						PARCELA21 VARCHAR(100) DEFAULT '',
						PARCELA22 VARCHAR(100) DEFAULT '',
						PARCELA23 VARCHAR(100) DEFAULT '',
						PARCELA24 VARCHAR(100)  DEFAULT '')
	
	INSERT INTO #DUPLICATAS (FILIAL, CLIENTE_FORNECEDOR, NUMERO) VALUES (@FILIAL, @CLIENTE_FORNECEDOR, @NUMERO)

	IF @TIPOORIGEM = 'P'
		BEGIN
			DECLARE @FORADOESTADO				AS TINYINT
			DECLARE @SIMPLES					AS TINYINT
			--DECLARE @PLU						AS VARCHAR(20)
			--DECLARE @CONDICAOICMS				AS INTEGER
			--DECLARE @ORIGEM						AS INTEGER
			--DECLARE @TOTAL						AS FLOAT
			--DECLARE @ALIQUOTAICMS				AS FLOAT
			--DECLARE @ALIQICMSDEST				AS FLOAT
			--DECLARE @MVA						AS FLOAT
			--DECLARE @ALIQICMSDESTSIMPLES		AS FLOAT
			--DECLARE @MVASIMPLES					AS FLOAT 
			--DECLARE @CFOP						AS INTEGER
			--DECLARE @BCST						AS FLOAT
			--DECLARE @ICMSRETIDO					AS FLOAT
			--DECLARE @BC							AS FLOAT
			--DECLARE @VICMS						AS FLOAT
			--DECLARE @CST						AS VARCHAR(3)
			--DECLARE @VICMSST					AS FLOAT
			
			--DECLARE @TOTALPRODUTOS				AS FLOAT
			--DECLARE @TOTALBC					AS FLOAT
			--DECLARE @TOTALVICMS					AS FLOAT
			--DECLARE @TOTALBCST					AS FLOAT
			--DECLARE @TOTALICMSRETIDO			AS FLOAT 

			--SELECT 
			--	f.Filial,
			--	ForaDoEstado = 	CASE WHEN f.UF <> c.UF THEN 1 ELSE 0 END,
			--	Simples = CASE WHEN ISNULL(c.Opt_Simples_nac, 0) = 1 THEN 1 ELSE 0 END,
			--	c.Codigo_Cliente,
			--	p.Pedido as Documento,
			--	p.natureza_operacao,
			--	m.PLU,
			--	m.Descricao,
			--	m.CF AS NCM,
			--	m.Und,
			--	i.Embalagem,
			--	m.Origem,
			--	CASE WHEN f.UF <> c.UF THEN m.Cod_Trib_Inter ELSE a.ICMS_Interestadual END AS AliquotaICMS,
			--	--** Colunas Pedido
			--	i.Qtde AS Qtde,
			--	CASE WHEN ISNULL(i.Qtde, 0) > 0 THEN CONVERT(DECIMAL(12,2), i.Total / i.Qtde) ELSE 0 END AS Unitario,
			--	i.Total,
			--	CondicaoICMS = CASE WHEN ISNULL(a.condicao_icms,'1') = 1 OR RTRIM(LTRIM(a.condicao_icms)) = '' THEN 1 ELSE a.condicao_icms END,
			--	AliqICMSDest = ISNULL(a.icms_interestadual, 0),
			--	MVA = ISNULL(a.mva, 0),
			--	AliqICMSDestSimples = ISNULL(a.icms_estado_simples, 0),
			--	MVASimples = ISNULL(a.mva_simples, 0),
			--	CFOP = CONVERT(NUMERIC(4), CASE WHEN f.UF <> c.UF THEN 6000 ELSE 5000 END),
			--	BC = CONVERT(NUMERIC(14,2), 0),
			--	VICMS = CONVERT(NUMERIC(14,2), 0),
			--	BCST = CONVERT(NUMERIC(14,2), 0),
			--	ICMSRetido = CONVERT(NUMERIC(12,2), 0),
			--	CST = '    ',
			--	p.nome_transportadora AS Transportadora,
			--	TipoFrete = 
			--			CASE 
			--				WHEN ISNULL(p.tipo_transporte,'') = 'CIF'THEN '0-Emitente' 
			--			ELSE 
			--				CASE  
			--					WHEN ISNULL(p.tipo_transporte,'') = 'FOB' THEN '1-Destinatario' 
			--				ELSE '' 
			--				END 
			--			END
			--INTO
			--	#PREDANFE
			--FROM 
			--	FILIAL f
			--	INNER JOIN Pedido p ON p.Filial = f.Filial
			--	INNER JOIN Pedido_itens i ON p.filial = i.filial AND p.Pedido = i.Pedido 
			--	INNER JOIN Cliente c ON p.Cliente_Fornec = c.Codigo_Cliente 
			--	INNER JOIN Mercadoria m ON m.PLU = i.PLU
			--	LEFT OUTER JOIN aliquota_imp_estado a ON a.NCM = m.cf AND a.UF = c.UF 
			--	LEFT OUTER JOIN Transportadora t ON p.nome_transportadora = t.Nome_transportadora 
			--WHERE
			--	p.Pedido = @NUMERO AND p.Cliente_Fornec = @CLIENTE_FORNECEDOR

			--IF @@ROWCOUNT > 0
			--	BEGIN
			--		SET @CST = ''
			--		SET @CFOP = 0
			--		SET @BC = 0
			--		SET @VICMS = 0
			--		SET @BCST = 0
			--		SET @ICMSRETIDO = 0

			--		DECLARE Impostos_Cursor	CURSOR FOR SELECT  ForaDoEstado, Simples, PLU, CondicaoICMS, Origem, Total, AliquotaICMS, AliqICMSDest, MVA, AliqICMSDestSimples, MVASimples FROM #PREDANFE
			--		OPEN Impostos_Cursor
			--		FETCH NEXT FROM Impostos_Cursor INTO @FORADOESTADO, @SIMPLES, @PLU, @CONDICAOICMS, @ORIGEM, @TOTAL, @ALIQUOTAICMS, @ALIQICMSDEST, @MVA, @ALIQICMSDESTSIMPLES, @MVASIMPLES
			--		WHILE @@FETCH_STATUS = 0
			--			BEGIN
			--				--** Retido na FONTES
			--				IF @CONDICAOICMS = 2
			--					BEGIN
			--						SET @CST = '60'
			--						SET @CFOP = 405
			--						SET @BC = 0
			--						SET @VICMS = 0
			--						SET @BCST = 0
			--						SET @ICMSRETIDO = 0
			--					END
			--				--** Sem diferenciação
			--				IF @CONDICAOICMS = 1
			--					BEGIN
			--						--** Calcular ICMS PRÓPRIO
			--						SET @BC = @TOTAL 
			--						SET @VICMS = @TOTAL * (@ALIQUOTAICMS / 100)
			--						--** Calcular se existe IVA
			--						IF @MVA > 0 OR @MVA > 0 OR @ALIQICMSDEST > 0 OR @ALIQICMSDESTSIMPLES > 0
			--							BEGIN
			--								SET @CST = '10'
			--								SET @CFOP = 403
			--								--** Checa se a empresa é SIMPLES NACIONAL
			--								IF @SIMPLES = 1
			--									BEGIN
			--										IF @ALIQICMSDESTSIMPLES = 0
			--											SET @ALIQICMSDESTSIMPLES = @ALIQICMSDEST
			--										IF @MVASIMPLES = 0
			--											SET @MVASIMPLES = @MVA 
									
			--										SET @BCST = @TOTAL * (1 + (@MVASIMPLES / 100))
			--										SET @VICMSST = @BCST * (@ALIQICMSDESTSIMPLES / 100)
			--									END
			--								ELSE
			--									BEGIN
			--										SET @BCST = @TOTAL * (1 + (@MVA / 100))
			--										SET @VICMSST = @BCST * (@ALIQICMSDEST / 100) 
			--									END
			--								SET @ICMSRETIDO = @VICMSST - @VICMS 
			--							END
			--						ELSE
			--							BEGIN
			--								SET @CST = '00'
			--								SET @CFOP = 102
			--							END
			--					END
			--				--** Atualiza DADOS
			--				UPDATE #PREDANFE SET BC = @BC, BCST = @BCST, VICMS = @VICMS, ICMSRetido = @ICMSRETIDO , CFOP = (CFOP + @CFOP), CST = CONVERT(VARCHAR(1), @ORIGEM) + @CST  WHERE PLU = @PLU 
			--				FETCH NEXT FROM Impostos_Cursor INTO @FORADOESTADO, @SIMPLES, @PLU, @CONDICAOICMS, @ORIGEM, @TOTAL, @ALIQUOTAICMS, @ALIQICMSDEST, @MVA, @ALIQICMSDESTSIMPLES, @MVASIMPLES
			--			END
			--		CLOSE Impostos_Cursor
			--		DEALLOCATE Impostos_Cursor

			--		--** Gerando TOTAIS
			--		SELECT
			--			@TOTALPRODUTOS = SUM(#PREDANFE.Total),
			--			@TOTALBC = SUM(#PREDANFE.Total),
			--			@TOTALVICMS = SUM(#PREDANFE.VICMS),
			--			@TOTALBCST = SUM(#PREDANFE.BCST),
			--			@TOTALICMSRETIDO = SUM(#PREDANFE.ICMSRetido)
			--		FROM #PREDANFE
			
			--		SELECT 
			--			GETDATE() AS Emissao, 
			--			0 AS Num_item, 
			--			dbo.Filial.Razao_Social, 
			--			d.Filial, 
			--			'000000' AS Codigo,
			--			dbo.Filial.serie_nfe as Serie,
			--			'' AS Protocolo, 
			--			Cliente.Codigo_Cliente as Cliente_Fornecedor,
			--			ID = REPLICATE('0', 44),
			--			ID_nf = dbo.F_MASCARA_ID(''), 
			--			d.PLU, 
			--			d.Descricao, 
			--			d.und, 
			--			d.CST, 
			--			d.Qtde, 
			--			d.Embalagem, 
			--			d.Unitario, 
			--			d.Total, 
			--			d.aliquotaicms AS Aliquota_ICMS,
			--			0 AS IPI, 
			--			0 as IPIV, 
			--			d.Natureza_operacao AS Natureza, 
			--			dbo.F_FORMATAR_IE(dbo.Filial.IE, dbo.Filial.UF) AS IE, 
			--			d.NCM, 
			--			d.CFOP, 
			--			CONVERT(DECIMAL(12, 2),0) AS Desconto, 
			--			CONVERT(DECIMAL(12, 2),0) AS despesas, 
			--			d.BCST as base_iva, 
			--			d.ICMSRetido as iva, 
			--			d.bc as base_icms, 
			--			d.VICMS as icmsv, 
			--			1 AS Saida, 
			--			dbo.F_FORMATAR_CPF_CNPJ(dbo.Filial.CNPJ, 1) AS CNPJ,
			--			Cliente.Nome_Cliente AS DEST_Razao_Social,
			--			dbo.F_FORMATAR_IE(Cliente.IE,Cliente.uf) AS DEST_IE, 
			--			Cliente.CNPJ AS DEST_CNPJ,
			--			RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(
			--			(
			--				Select top 1 id_meio_comunicacao 
			--				from cliente_contato 
			--				where codigo_cliente =cliente.Codigo_Cliente 
			--					and (Meio_Comunicacao like '%FONE%' OR Meio_Comunicacao like '%CELULAR%') 
			--			),'(',''),')',''), '-',''),'.',''))) AS Telefone,
			--			ISNULL(Cliente.Endereco, '') AS DEST_LOGRADOURO, 
			--			ISNULL(Cliente.complemento_end, '') AS DEST_COMPLEMENTO, 
			--			Cliente.endereco_nro AS DEST_NUMERO, 
			--			Cliente.Bairro AS DEST_BAIRRO, 
			--			Cliente.Cidade AS DEST_CIDADE, 
			--			Cliente.UF AS DEST_UF, 
			--			Cliente.CEP AS DEST_CEP, 
			--			0 AS Frete, 
			--			0 AS Pgto, 
			--			@TOTALPRODUTOS AS TotalProduto, 
			--			@TOTALBC AS TotalBCICMS, 
			--			@TOTALVICMS AS TotalICMS, 
			--			@TOTALBCST AS TotalBCST, 
			--			@TOTALICMSRETIDO AS TotalST, 
			--			CONVERT(DECIMAL(12,2), 0) AS TotalIPI, 
			--			CONVERT(DECIMAL(12,2), 0) AS TotalFrete, 
			--			CONVERT(DECIMAL(12,2), 0) AS TotalDespesas, 
			--			CONVERT(DECIMAL(12,2), 0) AS TotalDesconto, 
			--			@TOTALPRODUTOS + @TOTALICMSRETIDO AS TotalNF,
			--			ISNULL(dup.PARCELA01, '') AS PARCELA01,
			--			ISNULL(dup.PARCELA02, '') AS PARCELA02,
			--			ISNULL(dup.PARCELA03, '') AS PARCELA03,
			--			ISNULL(dup.PARCELA04, '') AS PARCELA04,
			--			ISNULL(dup.PARCELA05, '') AS PARCELA05,
			--			ISNULL(dup.PARCELA06, '') AS PARCELA06,
			--			ISNULL(dup.PARCELA07, '') AS PARCELA07,
			--			ISNULL(dup.PARCELA08, '') AS PARCELA08,
			--			ISNULL(dup.PARCELA09, '') AS PARCELA09,
			--			ISNULL(dup.PARCELA10, '') AS PARCELA10,
			--			ISNULL(dup.PARCELA11, '') AS PARCELA11,
			--			ISNULL(dup.PARCELA12, '') AS PARCELA12,
			--			ISNULL(dup.PARCELA13, '') AS PARCELA13,
			--			ISNULL(dup.PARCELA14, '') AS PARCELA14,
			--			ISNULL(dup.PARCELA15, '') AS PARCELA15,
			--			ISNULL(dup.PARCELA16, '') AS PARCELA16,
			--			ISNULL(dup.PARCELA17, '') AS PARCELA17,
			--			ISNULL(dup.PARCELA18, '') AS PARCELA18,
			--			ISNULL(dup.PARCELA19, '') AS PARCELA19,
			--			ISNULL(dup.PARCELA20, '') AS PARCELA20,
			--			ISNULL(dup.PARCELA21, '') AS PARCELA21,
			--			ISNULL(dup.PARCELA22, '') AS PARCELA22,
			--			ISNULL(dup.PARCELA23, '') AS PARCELA23,
			--			ISNULL(dup.PARCELA24, '') AS PARCELA24,
			--			EnderecoCompleto = REPLACE(RTRIM(LTRIM(dbo.Filial.Endereco)) + ' ' 
			--			+ RTRIM(LTRIM(dbo.Filial.endereco_nro)) + '-' + RTRIM(LTRIM(dbo.Filial.bairro)) + ' ' 
			--			+ RTRIM(LTRIM(dbo.Filial.CEP)) + ' ' + RTRIM(LTRIM(dbo.Filial.CIDADE)) + ' ' 
			--			+ RTRIM(LTRIM(dbo.Filial.UF)) + ' ' + 'Fone:' + dbo.Filial.Telefone,'  ', ' '),
			--			'' AS IDBarra,
			--			dbo.Filial.Logo,
			--			Producao_NFe = 2,
			--			Status_NFe = '', 
			--			ISNULL(t.Razao_social,'') as TRazao_Social,
			--			ISNULL(t.estado,'') as TUF,
			--			ISNULL(t.CNPJ,'') as TCNPJ,
			--			ISNULL(t.Cidade, '') as TMunicipio,
			--			rtrim(ltrim(ISNULL(t.endereco,'')))  as TEndereco,
			--			ISNULL(T.IE,'') AS TIE,
			--			Observacao = '',
			--			d.TipoFrete

			--		FROM
			--			#PREDANFE d 
			--			INNER JOIN dbo.Filial ON dbo.Filial.Filial = d.Filial 
			--			INNER JOIN dbo.Cliente ON dbo.Cliente.Codigo_Cliente = d.Codigo_Cliente
			--			LEFT OUTER JOIN dbo.Transportadora t ON d.Transportadora = t.Nome_transportadora,
			--			#DUPLICATAS dup
			--	END
		END
	ELSE
		BEGIN
			--** EFETUADO A INCLUSAO NA TABELA TEMPORARIA #DUPLICATAS
			DECLARE @FILIAL_DUP				AS VARCHAR(20)
			DECLARE @CLIENTE_FORNECEDOR_DUP	AS VARCHAR(30)
			DECLARE @DOCUMENTO_DUP			AS VARCHAR(10)
			DECLARE @VENCIMENTO_DUP			AS DATETIME
			DECLARE @VALOR_DUP				AS DECIMAL(12,2)
			DECLARE @DUPLICATA_DUP			AS VARCHAR(50)
			DECLARE @N_DUP					AS INTEGER
			DECLARE @SQLAUX					AS NVARCHAR(1000)
			
			DECLARE Duplicatas CURSOR FOR 
					SELECT Filial,  Cliente_Fornecedor, Codigo, Vencimento, Valor 
					FROM NF_Pagamento
					WHERE NF_Pagamento.Filial = @FILIAL AND NF_Pagamento.Cliente_Fornecedor = @CLIENTE_FORNECEDOR AND NF_Pagamento.Codigo = @NUMERO
			OPEN Duplicatas
			FETCH NEXT FROM Duplicatas INTO @FILIAL_DUP, @CLIENTE_FORNECEDOR_DUP, @DOCUMENTO_DUP, @VENCIMENTO_DUP, @VALOR_DUP
			SET @N_DUP = 1
			WHILE @@FETCH_STATUS = 0
				BEGIN
					SET @DUPLICATA_DUP = @DOCUMENTO_DUP + '/' + RTRIM(LTRIM(CONVERT(VARCHAR(2), @N_DUP))) +'   ' + SPACE(5) + CONVERT(VARCHAR, @VENCIMENTO_DUP, 103)  + '   ' + SPACE(2) + REPLACE(CONVERT(VARCHAR, @VALOR_DUP), '.', ',') 
					SET @SQLAUX = 'UPDATE #DUPLICATAS SET PARCELA' + CASE WHEN @N_DUP > 9 THEN CONVERT(VARCHAR(2), @N_DUP) ELSE '0' + CONVERT(VARCHAR(1), @N_DUP) END  + ' = ' + CHAR(39) + @DUPLICATA_DUP + CHAR(39)
					EXECUTE(@SQLAUX)
					SET @N_DUP = @N_DUP + 1
					FETCH NEXT FROM Duplicatas INTO @FILIAL_DUP, @CLIENTE_FORNECEDOR_DUP, @DOCUMENTO_DUP, @VENCIMENTO_DUP, @VALOR_DUP						
				END
			CLOSE Duplicatas
			DEALLOCATE Duplicatas
			
			SELECT   
                         dbo.NF.Emissao, 
                         dbo.NF.Emissao_hora, 
                         dbo.nf.Data,
                         dbo.nf.Data_hora,
                         dbo.NF_Item.Num_item, 
                         dbo.Filial.Razao_Social, 
                         dbo.NF.Filial, dbo.NF.Codigo, 
						 dbo.Filial.serie_nfe as Serie, 
						 ISNULL(dbo.NF.numero_protocolo,'') AS Protocolo,
                         dbo.nf.Cliente_Fornecedor,
                         ID = case when isnull(dbo.NF.id,'')='' then REPLICATE('0',44) else dbo.BarcodeCode128(isnull(dbo.NF.id,0)) end,
                         dbo.F_MASCARA_ID(ID) as ID_nf, 
                         PLU = CASE WHEN ISNULL(Mercadoria.Codigo_Emissao_NFe, '') = '' THEN dbo.NF_Item.PLU ELSE RTRIM(LTRIM(Mercadoria.Codigo_Emissao_NFe)) END, 
                         dbo.nf_item.Descricao, 
                         dbo.NF_Item.und, 
                         CONVERT(VARCHAR(1), ISNULL(dbo.Mercadoria.ORIGEM, 0)) + isnull(dbo.NF_Item.cst_icms,'') AS CST, 
                         dbo.NF_Item.Qtde, 
                         dbo.NF_Item.Embalagem, 
                         dbo.NF_Item.Unitario, 
                         dbo.NF_Item.Total, 
                         dbo.NF_Item.aliquota_icms,
						 ISNULL(dbo.NF_Item.IPI, 0) AS IPI, 
                         ISNULL(dbo.NF_Item.IPIV, 0) AS IPIV, 
                        dbo.Natureza_operacao.Descricao AS Natureza, 
                        dbo.F_FORMATAR_IE(dbo.Filial.IE, dbo.Filial.UF) AS IE, 
                        dbo.NF_Item.NCM, 
                        dbo.NF_Item.codigo_operacao AS CFOP, 
                         CONVERT(DECIMAL(12, 2),isnull(dbo.NF_Item.Desconto,0) / 100 * isnull(dbo.NF_Item.Total,0)) AS Desconto, 
                         dbo.NF_Item.despesas, 
                         dbo.NF_Item.base_iva, 
                         dbo.NF_Item.iva, 
                         isnull(dbo.NF_Item.base_icms,0) as base_icms, 
                         isnull(dbo.NF_Item.icmsv,0) as icmsv, 
                         dbo.nf.Tipo_NF  as Saida, 
                         dbo.F_FORMATAR_CPF_CNPJ(dbo.Filial.CNPJ, 1) AS CNPJ,
                         CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.Razao_social ELSE Cliente.Nome_Cliente END AS DEST_Razao_Social,
                         dbo.F_FORMATAR_IE(CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.IE ELSE Cliente.IE END, CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.UF ELSE Cliente.uf END) AS DEST_IE, 
                         
                         CASE WHEN nf.Dest_Fornec = 1 THEN 
							Fornecedor.CNPJ 
						 ELSE 
							Cliente.CNPJ 
						 END AS DEST_CNPJ, 
 						RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(REPLACE((
							Select top 1 id_meio_comunicacao 
							from cliente_contato 
							where codigo_cliente =cliente.Codigo_Cliente 
								and (Meio_Comunicacao like '%FONE%' OR Meio_Comunicacao like '%CELULAR%') 
						),'(',''),')',''), '-',''),'.',''))) AS Telefone,
						 CASE WHEN nf.Dest_Fornec = 1 THEN 
							RTRIM(LTRIM(ISNULL(Fornecedor.Endereco, '')))+','+ISNULL(Fornecedor.Endereco_nro, '') 
						 ELSE 
							RTRIM(LTRIM(ISNULL(Cliente.Endereco, '')))+','+isnull(cliente.endereco_nro,'') 
                         END AS DEST_LOGRADOURO, 
                         
                         CASE WHEN nf.Dest_Fornec = 1 THEN '' ELSE ISNULL(Cliente.complemento_end, '') END AS DEST_COMPLEMENTO, 
                         CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.Endereco_nro ELSE Cliente.endereco_nro END AS DEST_NUMERO, 
                         CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.Bairro ELSE Cliente.Bairro END AS DEST_BAIRRO, 
                         CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.Cidade ELSE Cliente.Cidade END AS DEST_CIDADE, 
                         CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.UF ELSE Cliente.UF END AS DEST_UF, 
                         CASE WHEN nf.Dest_Fornec = 1 THEN Fornecedor.CEP ELSE Cliente.CEP END AS DEST_CEP, 
                         dbo.NF.Frete, 
                         1 AS Pgto, 
                         isnull(dbo.NF.total_produto,0) AS TotalProduto, 
                         isnull(dbo.NF.Base_Calculo,0) AS TotalBCICMS, 
                         dbo.NF.ICMS_Nota AS TotalICMS, 
                         dbo.NF.Base_Calc_Subst AS TotalBCST, 
                         dbo.NF.ICMS_ST AS TotalST, 
                         dbo.NF.IPI_Nota AS TotalIPI, 
                         dbo.NF.Frete AS TotalFrete, 
                         dbo.NF.Despesas_financeiras AS TotalDespesas, 
                         isnull(dbo.NF.Desconto,0) AS TotalDesconto, 
                         dbo.NF.Total AS TotalNF,
						ISNULL(dup.PARCELA01, '') AS PARCELA01,
						ISNULL(dup.PARCELA02, '') AS PARCELA02,
						ISNULL(dup.PARCELA03, '') AS PARCELA03,
						ISNULL(dup.PARCELA04, '') AS PARCELA04,
						ISNULL(dup.PARCELA05, '') AS PARCELA05,
						ISNULL(dup.PARCELA06, '') AS PARCELA06,
						ISNULL(dup.PARCELA07, '') AS PARCELA07,
						ISNULL(dup.PARCELA08, '') AS PARCELA08,
						ISNULL(dup.PARCELA09, '') AS PARCELA09,
						ISNULL(dup.PARCELA10, '') AS PARCELA10,
						ISNULL(dup.PARCELA11, '') AS PARCELA11,
						ISNULL(dup.PARCELA12, '') AS PARCELA12,
						ISNULL(dup.PARCELA13, '') AS PARCELA13,
						ISNULL(dup.PARCELA14, '') AS PARCELA14,
						ISNULL(dup.PARCELA15, '') AS PARCELA15,
						ISNULL(dup.PARCELA16, '') AS PARCELA16,
						ISNULL(dup.PARCELA17, '') AS PARCELA17,
						ISNULL(dup.PARCELA18, '') AS PARCELA18,
						ISNULL(dup.PARCELA19, '') AS PARCELA19,
						ISNULL(dup.PARCELA20, '') AS PARCELA20,
						ISNULL(dup.PARCELA21, '') AS PARCELA21,
						ISNULL(dup.PARCELA22, '') AS PARCELA22,
						ISNULL(dup.PARCELA23, '') AS PARCELA23,
						ISNULL(dup.PARCELA24, '') AS PARCELA24,
						EnderecoCompleto = REPLACE(RTRIM(LTRIM(dbo.Filial.Endereco)) + ' ' 
						+ RTRIM(LTRIM(dbo.Filial.endereco_nro)) + '-' + RTRIM(LTRIM(dbo.Filial.bairro)) + ' ' 
						+ RTRIM(LTRIM(dbo.Filial.CEP)) + ' ' + RTRIM(LTRIM(dbo.Filial.CIDADE)) + ' ' 
						+ RTRIM(LTRIM(dbo.Filial.UF)) + ' ' + 'Fone:' + dbo.Filial.Telefone,'  ', ' '),
						dbo.NF.IDBarra,
						dbo.Filial.Logo,
						Producao_NFe = CASE WHEN ISNULL(dbo.NF.Producao_NFe,2) <> 1 THEN 2 END,
						Status_NFe = ISNULL(dbo.NF.Status,''),
						ISNULL(t.Razao_social,'') as TRazao_Social,
						ISNULL(t.estado,'') as TUF,
						ISNULL(t.CNPJ,'') as TCNPJ,
						ISNULL(t.Cidade, '') as TMunicipio,
						rtrim(ltrim(ISNULL(t.endereco,'')))  as TEndereco,
						ISNULL(T.IE,'') AS TIE,
						ISNULL(dbo.NF.Observacao,'') AS Observacao,
						TipoFrete = 
								CASE 
									WHEN ISNULL(dbo.NF.tipo_frete,0) = 0 THEN '0-Emitente' 
								ELSE  '1-Destinatario' END,
						Qtde_transp=NF.qtde,
						NF.especie,
						NF.marca,
						NF.numero,
						NF.peso_bruto,
						NF.peso_liquido
						
                         
			FROM         dbo.NF 
						 INNER JOIN dbo.NF_Item ON dbo.NF.Filial = dbo.NF_Item.Filial AND dbo.NF.Cliente_Fornecedor = dbo.NF_Item.Cliente_Fornecedor AND dbo.NF.Codigo = dbo.NF_Item.Codigo AND dbo.NF.Tipo_NF = dbo.NF_Item.Tipo_NF
						 INNER JOIN dbo.Mercadoria ON dbo.Mercadoria.PLU = dbo.NF_Item.PLU 
						 INNER JOIN dbo.Filial ON dbo.Filial.Filial = dbo.NF.Filial 
						 INNER JOIN dbo.Natureza_operacao ON dbo.NF.Codigo_operacao = dbo.Natureza_operacao.Codigo_operacao 
						 LEFT OUTER JOIN
                         dbo.Cliente ON dbo.Cliente.Codigo_Cliente = dbo.NF.Cliente_Fornecedor LEFT OUTER JOIN
                         dbo.Fornecedor ON dbo.Fornecedor.Fornecedor = dbo.NF.Cliente_Fornecedor LEFT OUTER JOIN
						 dbo.Transportadora t ON dbo.NF.nome_transportadora = t.Nome_transportadora
						 ,#DUPLICATAS Dup --ON Dup.NUMERO = dbo.NF.Codigo 

			WHERE
				(dbo.NF.Filial = @FILIAL  AND dbo.NF.Codigo = @NUMERO  AND RTRIM(LTRIM(dbo.NF.Cliente_Fornecedor)) = @CLIENTE_FORNECEDOR  AND dbo.NF.Tipo_NF = @TIPONF )
				
		END

GO

ALTER TABLE artigo_fiscal ALTER COLUMN descricao VARCHAR(500)

GO

CREATE PROCEDURE dbo.sp_EFD_ICMSIPI_C113
@Filial VARCHAR(20),
@Fornecedor VARCHAR(40),
@Codigo VARCHAR(20),
@Serie VARCHAR(3)

AS
-- sp_EFD_ICMSIPI_C113 'MATRIZ', 'XXXXX', '3999', ''
BEGIN
	DECLARE @ID AS VARCHAR(44)

	SELECT @ID = (SELECT TOP 1 ISNULL(Nf_Devolucao.id,'') 
	FROM Nf_Devolucao
	WHERE Nf_Devolucao.codigo_nf = @Codigo)

	IF @ID <> '' 
		BEGIN
			SELECT DISTINCT
			REG = 'C113',
			IND_OPER = '1', -- 0 = ENTRADA; 1 = SAÍDA
			IND_EMIT = '0', -- 0 - EMISSÃO PRÓPRIA; 1-EMISSÃO DE TERCEIROS
			COD_PART= NF.Cliente_Fornecedor,
			COD_MOD = '55',
			SER = NF.serie,
			SUB = '',
			NUM_DOC = NF.Codigo,
			DT_DOC = NF.Emissao,
			CHV_DOCE = NF.ID
			FROM NF
			WHERE NF.ID = @ID 
		END
	ELSE
		RETURN;
END

GO
ALTER TABLE NF_Item ADD Pedido_Numero VARCHAR(40), Pedido_Sequencia VARCHAR(3)

GO

SET ANSI_PADDING ON
GO

/****** Object:  Index [ix_IDChave]    Script Date: 27/07/2023 15:21:31 ******/
CREATE NONCLUSTERED INDEX [ix_IDChave] ON [dbo].[Saida_estoque]
(
	[Filial] ASC,
	[id_chave] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO

go
alter table NF add Validacao_Fiscal Varchar(100)


GO

/****** Object:  Table [dbo].[aliquota_imp_estado]    Script Date: 16/08/2023 15:12:54 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER TABLE [dbo].[aliquota_imp_estado] ADD
	[porc_estorno_st] [numeric](12, 2) NULL,
	[nao_abate_aliq_origem] [tinyint] NULL,
	[mva] [numeric](12, 2) NULL,
	[mva_cons_final] [numeric](12, 2) NULL,
	[condicao_icms] [varchar](20) NULL,
	[porc_icms] [numeric](12, 2) NULL,
	[tipo_reducao] [varchar](20) NULL,
	[porc_reducao] [numeric](12, 2) NULL,
	[texto_nf] [varchar](40) NULL,
	[cfop] [varchar](4) NULL,
	[porc_combate_pobresa] [numeric](12, 2) NULL,
	[icms_estado_simples] [numeric](12, 2) NULL,
	[mva_simples] [numeric](12, 2) NULL,
	[porc_reducao_simples] [numeric](12, 2) NULL,
	[texto_nf_simples] [varchar](40) NULL,
	[protocolo] [varchar](20) NULL,
	[tipo_reducao_simples] [varchar](20) NULL,
	[cod_tributacao] [numeric](3, 0) NULL,
	[filial] [varchar](20) NULL

GO


GO
/****** Object:  Table [dbo].[regioes_brasil]    Script Date: 16/08/2023 15:16:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[regioes_brasil](
	[uf] [varchar](2) NULL,
	[regiao] [varchar](20) NULL
) ON [PRIMARY]
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'AM', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'RR', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'AP', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'PA', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'TO', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'RO', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'AC', N'NORTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'MA', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'PI', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'CE', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'RN', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'PE', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'PB', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'SE', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'AL', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'BA', N'NORDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'MT', N'CENTRO-OESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'MS', N'CENTRO-OESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'GO', N'CENTRO-OESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'DF', N'CENTRO-OESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'SP', N'SUDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'RJ', N'SUDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'ES', N'SUDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'MG', N'SUDESTE')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'PR', N'SUL')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'RS', N'SUL')
GO
INSERT [dbo].[regioes_brasil] ([uf], [regiao]) VALUES (N'SC', N'SUL')
GO



/****** Object:  Table [dbo].[cf]    Script Date: 16/08/2023 15:18:56 ******/
SET ANSI_NULLS ON
GO
ALTER TABLE CF ADD
	[perc_imp_estadual] [numeric](12, 2) ,
	[perc_imp_fed_Nac] [numeric](12, 2) ,
	[perc_imp_fed_importado] [numeric](12, 2) ,
	[perc_pis] [numeric](12, 2) ,
	[perc_pis_entrada] [numeric](12, 2) ,
	[cst_pis] [varchar](2) ,
	[perc_cofins] [numeric](12, 2) ,
	[perc_cofins_entrada] [numeric](12, 2) ,
	[cst_cofins] [varchar](2) ,
	[CEST] [varchar](10) ,
	[filial] [varchar](20)  

GO
	UPDATE CF SET FILIAL = 'MATRIZ'
	





---************************************
---** ESPECÍFICO SOLDI_PDV
---************************************
GO

alter table produtos add RefFornecedor VARCHAR(50)
ALTER TABLE PRODUTOS_CARGA ADD REF_Fornecedor VARCHAR(50)

GO
/****** Object:  StoredProcedure [dbo].[sp_PDV_Proc_Carga]    Script Date: 17/04/2023 10:41:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[sp_PDV_Proc_Carga] 
	@IDCarga	as Varchar(40)
AS
BEGIN

	--** Deleta os produtos cujo CODIGO DE BARRAS esteja em desacordo
	BEGIN
		DELETE FROM 
			Produtos 
		WHERE Produtos.ID_Produto IN (	SELECT
											ID_produto 
										FROM
											Produtos_Carga
										WHERE
											Produtos.ID_Produto = Produtos_Carga.ID_Produto
										AND 
											Produtos.CodigoBarras <> Produtos_Carga.CodigoBarras)
	END

	--** Insere os novos produtos
	BEGIN
		INSERT INTO 
			Produtos
		SELECT [ID_Produto]
				,[CodigoBarras]
				,[Descricao]
				,[ID_Depto]
				,[Preco]
				,[Unidade]
				,[Peso]
				,[Pesavel]
				,[FatorConversao]
				,[ID_Tributacao]
				,[DataAlteracao]
				,[DataCarga]
				,[ICMS]
				,[PercentualImposto]
				,[Preco0]
				,[Preco1]
				,[Preco2]
				,[Preco3]
				,[Preco4]
				,[Preco5]
				,[UN]
				,[Origem]
				,[CST_ICMS]
				,[CFOP]
				,[NCM]
				,[Qtde_Tributaria]
				,[Carga_Tributaria_Municipal]
				,[Carga_Tributaria_Estadual]
				,[Carga_Tributaria_Federal]
				,[CEST]
				,[CST_PIS]
				,[CST_Cofins]
				,[Aliquota_PIS]
				,[Aliquota_Cofins]
				,[Bebida_Alcoolica]
				,[Preco_Atacado]
				,[Margem_Atacado]
				,[Quantidade_Atacado]
				,[Embalagem]
				,[Promocao]
				,[OfertaInicio]
				,[OfertaFim]
				,[PrecoPromocao]
				,[VendaComSenha]
				,[ImpAux]
				,[Terceiro_Preco]
				,[Inativo]
				,[Ref_Fornecedor]
		FROM 
			[dbo].[Produtos_Carga]
		WHERE 
			Produtos_Carga.ID_Carga = @IDCarga
		AND 
			Produtos_Carga.CodigoBarras NOT IN(SELECT Produtos.CodigoBarras FROM Produtos)
	END

    --** Altera os alterados do SOLDI
	BEGIN
		UPDATE 
			Produtos 
		SET 
			Produtos.Descricao = Produtos_Carga.Descricao,
			Produtos.ID_Depto = Produtos_Carga.ID_Depto,
			Produtos.Preco = Produtos_Carga.Preco,
			Produtos.Unidade = Produtos_Carga.Unidade,
			Produtos.Peso = Produtos_Carga.Peso,
			Produtos.Pesavel = Produtos_Carga.Pesavel,
			Produtos.FatorConversao = Produtos_Carga.FatorConversao,
			Produtos.ID_Tributacao = Produtos_Carga.ID_Tributacao,
			Produtos.DataAlteracao = Produtos_Carga.DataAlteracao,
			Produtos.DataCarga = Produtos_Carga.DataCarga,
			Produtos.ICMS = Produtos_Carga.ICMS,
			Produtos.PercentualImposto = Produtos_Carga.PercentualImposto,
			Produtos.Preco0 = Produtos_Carga.Preco0,
			Produtos.Preco1 = Produtos_Carga.Preco1,
			Produtos.Preco2 = Produtos_Carga.Preco2,
			Produtos.Preco3 = Produtos_Carga.Preco3,
			Produtos.Preco4 = Produtos_Carga.Preco4,
			Produtos.Preco5 = Produtos_Carga.Preco5,
			Produtos.UN = Produtos_Carga.UN,
			Produtos.Origem = Produtos_Carga.Origem,
			Produtos.CST_ICMS = Produtos_Carga.CST_ICMS,
			Produtos.CFOP = Produtos_Carga.CFOP,
			Produtos.NCM = Produtos_Carga.NCM,
			Produtos.Qtde_Tributaria = Produtos_Carga.Qtde_Tributaria,
			Produtos.Carga_Tributaria_Municipal = Produtos_Carga.Carga_Tributaria_Municipal,
			Produtos.Carga_Tributaria_Estadual = Produtos_Carga.Carga_Tributaria_Estadual,
			Produtos.Carga_Tributaria_Federal = Produtos_Carga.Carga_Tributaria_Federal,
			Produtos.CEST = Produtos_Carga.CEST,
			Produtos.CST_PIS = Produtos_Carga.CST_PIS,
			Produtos.CST_Cofins = Produtos_Carga.CST_Cofins,
			Produtos.Aliquota_PIS = Produtos_Carga.Aliquota_PIS,
			Produtos.Aliquota_Cofins = Produtos_Carga.Aliquota_Cofins,
			Produtos.Bebida_Alcoolica = Produtos_Carga.Bebida_Alcoolica,
			Produtos.Preco_Atacado = Produtos_Carga.Preco_Atacado,
			Produtos.Margem_Atacado = Produtos_Carga.Margem_Atacado,
			Produtos.Quantidade_Atacado = Produtos_Carga.Quantidade_Atacado,
			Produtos.Embalagem = Produtos_Carga.Embalagem,
			Produtos.Promocao = Produtos_Carga.Promocao,
			Produtos.OfertaInicio = Produtos_Carga.OfertaInicio,
			Produtos.OfertaFim = Produtos_Carga.OfertaFim,
			Produtos.PrecoPromocao = Produtos_Carga.PrecoPromocao,
			Produtos.TerceiroPreco = Produtos_Carga.Terceiro_Preco,
			Produtos.Inativo = Produtos_Carga.Inativo,
			Produtos.RefFornecedor = Produtos_Carga.Ref_Fornecedor
		FROM 
			Produtos_Carga
		WHERE 
			Produtos.ID_Produto = Produtos_Carga.ID_Produto 
			AND Produtos_Carga.ID_Carga = @IDCarga
	END
END

GO

insert into Versoes_Atualizadas select 'Versão:1.320.904', getdate();